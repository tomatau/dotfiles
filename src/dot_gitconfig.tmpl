[user]
    name = {{ .git.name }}
    email = {{ .git.email }}
    # proves author authenticity
    signingkey = {{ joinPath "~/.ssh" (print .github.key_name ".pub") }}

[gpg]
    format = ssh

[branch]
    sort = -committerdate

[core]
    editor = subl -n -w
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
    pager = delta
    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    # trustctime = false

[init]
    defaultBranch = main

[pager]
    branch = false
    stash = false

[push]
    default = simple

[pull]
    rebase = true

[rebase]
    autosquash = true

[rerere]
    enabled = true
    autoupdate = true

[help]
    autocorrect = prompt

[tag]
    sort = version:refname

[alias]
    a = add
    aa = add -A
    b = branch
    s = status -s
    st = status
    c = commit
    cn = commit --no-verify
    cm = commit --message
    cmn = commit --message --no-verify
    ca = commit --all
    can = commit --all --no-verify
    cam = commit --all --message
    camn = commit --all --message --no-verify
    cia = commit --amend -C HEAD
    cian = commit --amend -C HEAD --no-verify
    mend = commit --amend
    mendn = commit --amend --no-verify
    co = checkout
    cob = checkout -b
    cobom = checkout origin/main -b
    d = diff -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dt = difftool -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dsd = diff --staged -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dtsd = difftool --staged -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dst = diff --stat -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dtst = difftool --stat -- ':!package-lock.json' ':!bun.lock' ':!pnpm-lock.yaml'
    dword = diff --color-words
    dnew = log main.. --reverse
    unstage = reset HEAD
    uncommit = reset HEAD~
    unpush = push -f origin HEAD^:main
    ignore = update-index --assume-unchanged
    unignore = update-index --no-assume-unchanged
    ignored = !git ls-files -v | grep "^[[:lower:]]"
    last = log -1 -p HEAD
    m = merge
    ma = merge --abort
    ps = push
    psn = push --no-verify
    pf = push --force-with-lease
    pff = push --force
    pfn = push --force-with-lease --no-verify
    pffn = push --force --no-verify
    pl = pull
    plr = pull --rebase
    plf = pull --force
    rmc = rm --cached
    rb = rebase
    rbc = rebase --continue
    rbs = rebase --skip
    rba = rebase --abort
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    ln = !git --no-pager log --pretty=oneline -n 20 --graph --abbrev-commit
    lnf = !git --no-pager log --pretty=oneline -n 20 --graph
    # show custom graph
    g = log --graph --pretty=custom
    delbr = push origin --delete

[delta]
    syntax-theme = Monokai Extended
    # use n and N to move between diff sections
    navigate = true
    # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    # light = false
    side-by-side = true
    line-numbers = true

[interactive]
    diffFilter = delta --color-only

[merge]
    conflictstyle = diff3

[diff]
    colorMoved = default
    # renames = copies # detect renames
    tool = difftastic

[difftool]
    prompt = false

[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"

[mergetool]
    prompt = false
    keepBackup = false

[color]
    ui = true

[color "branch"]
    current = yellow bold
    local = green bold
    remote = cyan bold

[color "diff"]
    meta = yellow bold
    frag = magenta bold # line info
    old = red bold # deletions
    new = green bold # additions
    whitespace = red reverse

[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red bold

[pretty]
    # Custom log output
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │  author name ┘
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true

[web]
    browser = open

[url "git@github.com:"]
    insteadOf = https://github.com/

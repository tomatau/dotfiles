export XDG_CONFIG_HOME={{ .files.xdg_config_home | quote }}
export EDITOR="subl -w"
export CODE_PATH={{ .code_path | quote }}
export CODE_PATH_TOM={{ .code_path_tom | quote }}
export GOPATH="$CODE_PATH/go"
export LANG="en_GB.UTF-8"
{{ $token_name := printf "npm token for %s" .chezmoi.hostname -}}
{{ $token := (index (lastpassRaw $token_name) 0).note -}}
{{- if $token -}}
export NPM_TOKEN={{ $token | quote }}
{{- else -}}
export NPM_TOKEN="hostname-specific-token-not-found"
{{- end }}
export PAGER="moor"
export PGUSER="postgres"
export PNPM_HOME="$HOME/Library/pnpm"
export PROTO_HOME="$HOME/.proto"
export PYENV_ROOT="$HOME/.pyenv"
export STARSHIP_CONFIG="$XDG_CONFIG_HOME/starship.toml"
export FNM_COREPACK_ENABLED="true"
export FZF_COMPLETION_TRIGGER="**"
export FZF_DEFAULT_OPTS="
--style default
--preview 'toms-fzf-preview {}'
--bind 'ctrl-p:toggle-preview'
"
export FZF_DEFAULT_COMMAND="
if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  git ls-files --cached --others --exclude-standard
else
  fd --type f --hidden --follow --exclude .git
fi
"
export FZF_CTRL_T_COMMAND="
if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  git ls-files --cached --others --exclude-standard
else
  fd --hidden --follow --exclude .git
fi
"
export FZF_ALT_C_OPTS="--preview 'lsd --tree -d {}'"
export FZF_ALT_C_COMMAND="
if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  git ls-files --cached --others --exclude-standard | xargs -I {} dirname {} | sort -u
else
  fd --type d --hidden --follow --exclude .git
fi
"
export FZF_CTRL_R_OPTS="--style default --no-preview"

if [[ "$SHELL" == "bash" ]]; then
  export GREP_OPTIONS="--color=auto"
fi
